#!/bin/bash
#PBS -N validation_fileprep
#PBS -q hera
#PBS -l nodes=1:ppn=1
#PBS -l walltime=48:00:00
#PBS -l vmem=256g
#PBS -j oe
#PBS -o /lustre/aoc/projects/hera/Validation/test-4.0.0/logs/file_prep.out
#PBS -m be
#PBS -M r.pascua+nrao@berkeley.edu

date
source ~/.bashrc
conda activate validation

cd /lustre/aoc/projects/hera/H1C_IDR2/IDR2_2
declare obsbase=$(pwd)
declare obsdirs=$(ls -d 245*)
declare bad_days=(2458104 2458105 2458109)
# Get the obsdays mod bad days.
declare obsdays=()
for obsday in ${obsdirs[@]}; do
    if [[ ! " ${bad_days[@]} " =~ ${obsday%/} ]]; then
        obsdays+=( ${obsday%/} )
    fi
done

# Finish setup.
declare lst_min=1
declare lst_max=7
declare testdir=/lustre/aoc/projects/hera/Validation/test-4.0.0
declare simdir=$testdir/data/visibilities
declare cfgfile=$testdir/setup/sim_config.yaml
declare skycmp=(sum.uvh5)

# Make sure the tools are up to date and switch to the right directory.
cd ~/hera_software/hera-validation
declare branches=$(git branch)
declare remotes=$(git branch -r)
if [[ " ${branches[@]} " =~ "test-4.0.0" ]]; then
    git checkout test-4.0.0
    git pull origin test-4.0.0
elif [[ " ${remotes[@]} " =~ "test-4.0.0" ]]; then
    git checkout --track origin/test-4.0.0
fi
cd test-series/4

declare savedirs=()
# Only loop over a subset of the days. (Just remove the slice to do all days.)
for obsday in ${obsdays[@]:0:1}; do
    obsdir=${obsbase}/${obsday}
    savedir=${simdir}/${obsday}
    savedirs+=($savedir)
    # Create the save directory if it doesn't exist.
    if [[ ! -e $savedir ]]; then
        mkdir $savedir
    fi
    for simfile in ${skycmp[@]}; do
        simfile=${simdir}/${simfile}
        echo "python -m tools.prepare_sim_files ${simfile} ${obsdir} ${savedir} --lst_min ${lst_min} --lst_max ${lst_max} --uniformly_sampled --config ${cfgfile} --Nchunks 2 --clobber --verbose"
        python -m tools.prepare_sim_files ${simfile} ${obsdir} ${savedir} --lst_min ${lst_min} --lst_max ${lst_max} --uniformly_sampled --config ${cfgfile} --Nchunks 2 --clobber --verbose
    done
done

# Update permissions.
for savedir in ${savedirs[@]}; do
    chmod ug+r $savedir/*
done
date
